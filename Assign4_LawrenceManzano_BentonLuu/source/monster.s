//This function checks if Mario hit the goomba or the spiky monster. If so, Mario will restart to the first level but have a life decreased but still have his score and coin count remain.
.globl hitMonster
hitMonster:
        push    {lr}

        ldr     r9, =worldCounter        //Check if Mario is in the first level. If not branches to hitMonsterWorld3.
        ldr     r8, [r9]
        cmp     r8, #0
        bne     hitMonsterWorld3

        ldr     r9, =killedGoomba       //Checks if the goomba was killed. If so branches to return.
        ldr     r8, [r9]
        cmp     r8, #1
        beq     return

        b       hitMonsterCont

//Checks if Mario is in the final world where the spiky monster is.
hitMonsterWorld3:
        ldr     r9, =worldCounter
        ldr     r8, [r9]
        cmp     r8, #3
        bne     return

//Check if Mario hits a monster face either the right side or the left side of the monster.
hitMonsterCont:
        ldr     r9, =marioX           //Checks if Mario's front side is touching a monster boundary on the left side.
        ldr     r8, [r9, #4]
        cmp     r8, #272
        moveq   r5, #1
        movne   r5, #0

        ldr     r9, =marioX           //Checks if Mario's back side is touching a monster boundary on the right side.
        ldr     r8, [r9]
        cmp     r8, #320
        moveq   r6, #1
        movne   r6, #0

        orr     r7, r5, r6

        ldr     r9, =marioY           //Checks if Mario is on the ground or not.
        ldr     r8, [r9, #4]
        cmp     r8, #704
        moveq   r6, #1
        movne   r6, #0

        tst     r7, r6                //If Mario is on the ground and is touching a monster boundary, branches to hit.
        bne     hit

        b       return

//Checks if Mario is hit in the first world and if so will sets the hitGoomba label to 1, meaning that he hit the monster.
hit:
        ldr     r9, =worldCounter     //Checks if Mario is in the first world. If not branches to hitWorldFinal.
        ldr     r8, [r9]
        cmp     r8, #0
        bne     hitWorldFinal

        ldr     r9, =hitGoomba        //Sets the hitGoomba label to 1.
        mov     r8, #1
        str     r8, [r9]

        b       hitCont

//Checks if Mario is hit in the final world and if so will sets the hitSpiky label to 1, meaning that he hit the monster, also resets that the goomba was not killed.
hitWorldFinal:
        ldr     r9, =worldCounter     //Check if Mario is in the final world. If not branches to return.
        ldr     r8, [r9]
        cmp     r8, #3
        bne     return

        ldr     r9, =hitSpiky         //Sets the hitSpiky label to 1.
        mov     r8, #1
        str     r8, [r9]

        ldr     r9, =killedGoomba     //Resets that the goomba is not killed.
        mov     r8, #0
        str     r8, [r9]

//If Mario is hit a monster, then his lives will decrease, he will return back to the first level but his score and coin count will remain.
hitCont:
        ldr     r9, =marioLives       //Checks if Mario lives are 0. If so branches to return.
        ldr     r8, [r9]
        cmp     r8, #0
        beq     return

        bl      restart               //Resets the initial position of Mario.
        bl      decreaseLives         //Decrease the lives of Mario by 1.
        bl      newLevelTwo           //Resets level two so that none of the blocks have been hit.

        ldr     r9, =marioLives       //Checks if Mario lives are 0. If not will redraw the first level. If so branches to return.
        ldr     r8, [r9]
        cmp     r8, #0
        beq     return
        bl      levelOne

        ldr     r9, =marioRight       //Reset Mario's facing position so that he is facing right.
        mov     r8, #1
        str     r8, [r9]

        mov     r0, #0                //Redraws Mario on the ground on the leftmost side of the screen.
        mov     r1, #640
        mov     r2, #64
        mov     r3, #704
        bl      drawMarioR

//Returns back to calling code after the function is done.
return:
        pop     {lr}
        bx      lr                     //Return to calling code.

//This function checks if Mario hit the goomba or the spiky monster while he is jumping. If so, Mario will restart to the first level but have a life decreased but still have his score and coin count remain.
.globl jumpMonster
jumpMonster:
        push    {lr}
        ldr     r9, =worldCounter       //Checks if Mario is in the final level. If so branches to rightJumpMonster.
        ldr     r8, [r9]
        cmp     r8, #3
        beq     rightJumpMonster

        ldr     r9, =killedGoomba       //Checks if the goomba was killed or not. If so branches to return.
        ldr     r8, [r9]
        cmp     r8, #1
        beq     return

//Checks if Mario lands on the monster from jumping when facing right.
rightJumpMonster:
        ldr     r9, =marioRight     //Checks if Mario is facing right. If not branches to leftJumpMonster.
        ldr     r8, [r9]
        cmp     r8, #1
        bne     leftJumpMonster

        ldr     r9, =marioY         //Checks if Mario's feet are touching the top of the monster.
        ldr     r8, [r9, #4]
        mov     r6, #704
        mov     r7, #46
        sub     r6, r7
        cmp     r8, r6
        bne     returnJumpMonster

        ldr     r9, =marioX         //Checks if Mario is within the monster boundary (front).
        ldr     r8, [r9, #4]
        cmp     r8, #272
        blt     returnJumpMonster

        ldr     r8, [r9]            //Checks if Mario is within the monster boundary (back)
        cmp     r8, #320
        bgt     returnJumpMonster

        b       kill

//Checks if Mario lands on the monster from jumping when facing left.
leftJumpMonster:
        ldr     r9, =marioY         //Checks if Mario's feet are touching the top of the monster.
        ldr     r8, [r9, #4]
        mov     r6, #704
        mov     r7, #46
        sub     r6, r7
        cmp     r8, r6
        bne     returnJumpMonster

        ldr     r9, =marioX         //Checks if Mario is within the monster boundary (front).
        ldr     r8, [r9, #4]
        cmp     r8, #272
        blt     returnJumpMonster

        ldr     r8, [r9]            //Checks if Mario is within the monster boundary (back)
        cmp     r8, #320
        bgt     returnJumpMonster

//Mario landed on the top of the goomba, the goomba is killed and cleared from the screen.
kill:
        ldr     r9, =worldCounter     //Checks if Mario is in the first level. If not branches to hitJumpSpiky.
        ldr     r8, [r9]
        cmp     r8, #0
        bne     hitJumpSpiky

        ldr     r9, =killedGoomba     //Sets the killedGoomba label to 1, meaning that the goomba was killed.
        mov     r8, #1
        str     r8, [r9]

        mov     r6, #704              //Clears the goomba from the screen.
        mov     r7, #46
        sub     r6, r7
        mov     r0, #272
        mov     r1, r6
        mov     r2, #320
        mov     r3, #704
        bl      drawBlue

        mov     r0, #1                //Increments the score by 100 for killing the goomba.
        bl      updateScore

        b       returnJumpMonster

//Mario landed on top of the spiky monster, Mario dies, his lives decrease by 1 and restarts at the first level.
hitJumpSpiky:
        ldr     r9, =worldCounter       //Checks if Mario is the in the final level. If not branches back to returnJumpMonster.
        ldr     r8, [r9]
        cmp     r8, #3
        bne     returnJumpMonster

        ldr     r9, =killedGoomba       //Resets the killedGoomba label back to 0, meaning that the goomba is not killed.
        mov     r8, #0
        str     r8, [r9]

        ldr     r9, =hitSpiky           //Sets the hitSpiky label to be 1.
        mov     r8, #1
        str     r8, [r9]

        bl      restart                 //Resets the initial position of Mario.
        bl      decreaseLives           //Decrease Mario's lives by 1.
        bl      newLevelTwo             //Reset the blocks in the second level.

        ldr     r9, =marioLives         //Checks if Mario lives are 0. If so branches to return.
        ldr     r8, [r9]
        cmp     r8, #0
        beq     return

        bl      levelOne                //If Mario's lives are not 0, the first level is drawn.

        mov     r0, #0                  //Redraws Mario on the ground on the leftmost side of the screen.
        mov     r1, #640
        mov     r2, #64
        mov     r3, #704
        bleq    drawMarioR

//Return back to calling code when the function is done.
returnJumpMonster:
        pop     {lr}
        bx      lr

//Resets the blocks in the second level so that none have the blocks have been hit.
newLevelTwo:
        push    {lr}

        ldr     r9, =coinJustHit      //Reset that the coins have appeared on the screen.
        mov     r8, #0
        str     r8, [r9]
        str     r8, [r9, #4]
        str     r8, [r9, #8]

        ldr     r9, =mysteryBox       //Reset that the coin blocks have been hit.
        mov     r8, #0
        str     r8, [r9]
        str     r8, [r9, #4]
        str     r8, [r9, #8]

        ldr     r9, =hitBrick         //Reset that the breakable brick have been hit.
        mov     r8, #0
        str     r8, [r9]
        str     r8, [r9, #4]
        str     r8, [r9, #8]

        pop     {lr}
        bx      lr                  //Return to calling code.

//This function draws the goomba in the first level.
//r0 the starting X position of the goomba.
//r1 the starting Y position of the goomba.
//r2 the ending X position of the goomba.
//r3 the ending Y position of the goomba.
.globl drawGoomba
drawGoomba:
        push    {r0-r3, lr}
        mov	r4,	r0			//Start X position of your picture
        mov     r9,     r0
	mov	r5,	r1
	ldr	r6,	=goomba			//Address of the picture
	mov	r7,	r2			//Width of your picture
	mov	r8,	r3			//Height of your picture

         b       drawPictureLoop

//This function draws the spiky monster in the final level.
//r0 the starting X position of the spiky monster.
//r1 the starting Y position of the spiky monster.
//r2 the ending X position of the spiky monster.
//r3 the ending Y position of the spiky monster.
.globl drawSpiky
drawSpiky:
        push    {r0-r3, lr}
        mov	r4,	r0			//Start X position of your picture
        mov     r9,     r0
	mov	r5,	r1
	ldr	r6,	=spiky			//Address of the picture
	mov	r7,	r2			//Width of your picture
	mov	r8,	r3			//Height of your picture

//This function draws out the ascii image pixel by pixel onto the screen.
drawPictureLoop:
	mov	r0,	r4			//passing x for ro which is used by the Draw pixel function
	mov	r1,	r5			//passing y for r1 which is used by the Draw pixel formula

	ldrh	r2,	[r6],#2			//setting pixel color by loading it from the data section. We load hald word
	bl	DrawPixel
	add	r4,	#1			//increment x position
	cmp	r4,	r7			//compare with image with
	blt	drawPictureLoop
	mov	r4,	r9			//reset x
	add	r5,	#1			//increment Y
	cmp	r5,	r8			//compare y with image height
	blt	drawPictureLoop
	pop     {r0-r3, lr}
	bx 	lr			//return


//Data section
.section        .data

//The label that contains if the goomba was killed (1) or not (0).
.globl killedGoomba
killedGoomba:
        .int 0

//The label that contains if the goomba was hit by Mario (1) or not (0).
.globl hitGoomba
hitGoomba:
        .int 0

//The label that contains if the spiky monster was hit by Mario (1) or not (0).
.globl hitSpiky
hitSpiky:
        .int 0

spiky:
.ascii "?l?t?t?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?t\377\214\377\336"
.ascii "\377\377\177\357\237|\377c?l?l?l?l?t?t?l?l?l?l?l?l?l?l?l?l?l"
.ascii "?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?t\377\214\377\336"
.ascii "\377\377\237\357\237\204\377c?l?l?l?l?t?t?l?l?l?l?l?l?l"
.ascii "?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?t?l?l?l?l?l?l?l_t\377\214"
.ascii "\377\336\377\377\237\357\277\204\377c?l?l?l?l?t?t?l?l"
.ascii "?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l\37t?t?l?t?t?l?l?l?l?t?l"
.ascii "?l?l?l\37l?t\377\214\377\336\377\377\237\357\277\204\377c?l?l"
.ascii "?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?t?l?l?t?t?l?l?l"
.ascii "?l?l?l?l?l?l?l\37l\377c\377c\337\204\37\327\377\377\277\357"
.ascii "\237|\337[\37d?l?l?l?l?l?l?l?l?l?l?l?l?t?l?l?l?l?l?l?l?l?l?l"
.ascii "?l?l?l?l?t?l?l?l?l?l?l?l?l?l_t\277\204\37\225_\235\236\255\273\346"
.ascii "Z\377\371\366\332\244Z\224\233\224^|?t?l?t?t?l?l?l?l?l"
.ascii "?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l\37l\277\204"
.ascii "\336\265\236\357\377\377\234\377\21\376l\375K\375k\375k\375"
.ascii "N\355\231\234_t?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l?l"
.ascii "?l\177|\237\204\277\204_t?l?l?l?l?l?l?t?l\37l\237\204\336\255"
.ascii "\277\367\377\377\274\377\357\375)\375\350\374\10\375G\375\13\365"
.ascii "y\234>t?l?l?l?l?l?l?l?l?l?t_t\237|\237|_t?t?l?l?l?l?l\37l"
.ascii "_t?\225\37\266\37\266\277\204?l?l?l?l?l?l?l?l\37l\237|\276\255"
.ascii "\237\367\377\377\275\377\357\375)\375\347\374\347\374\6\375"
.ascii "\352\364y\234>t?l\37l?l?l?l?l?l?l\37l_t\377\214\277\255\337\255"
.ascii "\277\204_t?l?l?l?l?l\377k\177|?\276\277\367\277\367\37\225"
.ascii "?l?l?l?l?l?t?t?l\37l\237|\276\255\237\357\377\377\234\377"
.ascii "\357\375)\375\347\374\10\375\7\375\352\364y\234>t?l?l?l?l?t"
.ascii "?l?l?l\37l\177t\277\255\37\347_\357?\225_t?l?l?l?l?l\377k\177|"
.ascii "_\276\277\367\237\367\37\225?t?t_l?l?l?l?t\37l\37l\237|\236\245"
.ascii "\237\357\377\377\274\377\360\375)\375\350\374\10\375\7\375"
.ascii "\352\364y\224?t?l?l\37l?l?l?l?l?t\377k_t\337\255_\347\237\357"
.ascii "_\225_t\37l?l?l?l?l\37l\177|_\276\277\367\276\377\227\315"
.ascii "\324\274\265\264\234\214_t?l?l?t\277\204\337\255\177\276\275\316"
.ascii "\226\366\224\376R\376l\375\11\375\350\374\10\375\7\375\12\365"
.ascii "\321\314\324\274\266\264{\224^|\37l\37l\37l\237|\337\265"
.ascii "?\266\36\276\367\3255\3666\346\334\234_t?l?l?l?l\37l\37l\177|"
.ascii "_\276\277\357\275\377\356\375H\375+\365\270\244^|?l\37l_t"
.ascii "_\235~\357\377\377\335\377\255\375\350\374\350\374\10\375\10\375"
.ascii "\10\375\10\375\10\375\10\375)\375H\375+\365\266\264]\204"
.ascii "?l_t_t\37\225~\357\377\377\375\377\356\375\11\375\315\344Y\224"
.ascii ">t?l?l?l?l?l\37l\177|_\276\277\357\275\377\255\375\347\374"
.ascii "\353\354\232\234_t\37l?l_t\37\225^\347\377\377\275\377\214\375"
.ascii "\347\374\350\374\10\375\10\375\10\375\10\375\10\375\10\375"
.ascii "\10\375\7\375\352\364\226\254]\204\177t\377\214\377\214~\245"
.ascii "^\347\377\377\336\377\255\375\350\374\314\344Y\224>t?l?l?l?l"
.ascii "?l\37l\177|_\306\277\357\275\377\215\375\347\374\351\374\356\334"
.ascii "\262\274x\244>t?t?\225>\347\377\377\275\377\254\375\347\374"
.ascii "\350\374\10\375\10\375\350\374\10\375\10\375\10\375\10\375"
.ascii "\7\375\352\364v\244}\204\37\215\237\316\377\336\335\336\267\366"
.ascii "s\376\20\376*\375\350\374\314\344Y\224>t?l?l?l?l?l\37l\177|"
.ascii "_\276\277\357\275\377\255\375\350\374\7\375\6\375\12\365\261\304"
.ascii ">|?l\37\225^\347\377\377\275\377\254\375\347\374\350\374"
.ascii "\10\375\10\375\10\375\10\375\10\375\10\375\10\375\7\375\352\354"
.ascii "v\244}\204_\225\237\357\377\377\335\3771\376)\375\246\374"
.ascii "\350\374\350\374\315\344y\224>t?l?t?l?l?l\37d\177|_\276\237\357"
.ascii "\274\377\255\375\10\375\10\375\10\375\353\354\262\304>|"
.ascii "_l\37\225\374\346\336\377|\377\214\375\347\374\350\374\10\375"
.ascii "\350\374\10\375\10\375\10\375\350\374\350\374\306\374\251\364"
.ascii "V\244]\204?\225>\357\376\377{\3771\376K\375\347\374\10\375"
.ascii "\350\374\314\344y\224>t?l?l?t?l?l\37l\177|_\276\277\357\275\377"
.ascii "\255\375\10\375\10\375\10\375\352\364\316\324\226\244\230\234"
.ascii "\265\264\317\354\216\374m\374\351\374\10\375\10\375\350\374"
.ascii "\10\375\350\374\350\374\10\375\350\374\305\373#\373F\363"
.ascii "t\304}\255\36\2765\356R\3761\376\214\375)\375\350\374\10\375"
.ascii "\350\374\315\344y\224>t?l?l?l?l?l\37l\177|_\276\277\357\274\377"
.ascii "\214\375\306\374\307\374\347\374\351\374\353\354\316\334\317\324"
.ascii "\214\344F\363C\372C\372\247\374I\375I\375(\375)\375)\375"
.ascii "(\375i\375\10\375\3\373\0\372c\362\363\344\235\336\36\347"
.ascii "\257\375J\375*\375)\375\10\375\10\375\350\374\350\374\315\344"
.ascii "y\224>t?l?l?l?l?l\37l\177|?\276\277\357\275\377\214\375\307\374"
.ascii "\347\374\350\374\10\375\10\375\10\375\10\375\207\374\342\372"
.ascii "\200\371\240\371g\374H\375)\375(\375(\375(\375\10\375i\375"
.ascii "\10\375\303\372\240\371\"\372R\375}\377\336\377\255\375\347\374"
.ascii "\347\374\350\374\350\374\10\375\10\375\10\375\315\344Y\224"
.ascii ">t?l?t?l?l?l\377k\177|_\276\237\357\377\377Z\3779\377\326\376"
.ascii "\315\375\11\375\350\374\10\375(\375\247\374\3\373\340\371"
.ascii "\200\371a\372\242\372\202\372\242\372\202\372\202\372\242\372"
.ascii "\302\372\202\372\0\372\200\361\"\372R\375}\377\335\377\255\375"
.ascii "\350\374\350\374\350\374\10\375\10\375\10\375\10\375\355\344"
.ascii "y\224>t?l?l?l?t?t\37l\237|_\276\177\357\377\377\377\377\377\377"
.ascii "\275\377\360\375)\375\347\374\10\375\10\375\247\374\343\372"
.ascii "\1\372\240\371\240\371\240\371\200\371\200\361\200\361"
.ascii "\200\361\240\371\240\371\240\371\240\371`\371B\372R\375}\377"
.ascii "\376\377\256\375\350\374\10\375\10\375\10\375\10\375\10\375\10\375"
.ascii "\315\344y\224>t?l?l?t>t\34\204\332\213:\224\232\315z\356"
.ascii "\32\377{\377\235\3779\377\316\375)\375\347\374\207\374g\374"
.ascii "&\374\302\372\340\371\300\361\203\372\305\372\245\372\245\372"
.ascii "\245\372\244\372b\372A\372!\372\300\371\200\371\"\372\257\374"
.ascii "\231\376\32\377l\375\350\374\350\374\350\374\10\375\10\375"
.ascii "\247\374g\374k\3448\224>t?l\37l\177t<\204/\303\251\322\210\332"
.ascii "\11\353)\363\252\373M\375\317\375\316\375J\375I\375\310\374"
.ascii "\3\373\202\372\202\372\1\372`\361\342\3712\375W\376W\3767\376"
.ascii "X\376\25\376\314\374h\374\345\373\201\372\300\371\340\371"
.ascii "\305\372\10\373\211\373\250\374\10\375\10\375\10\375H\375\350\374"
.ascii "$\373\202\372\310\332\267\223\36t?l\377c?l\332\203(\322"
.ascii "\201\361@\361`\361 \361\300\371\207\374j\375j\375I\375\211\375"
.ascii "\10\375b\372\300\371\300\371\200\371\200\370a\3717\376\336\377"
.ascii "\336\377\337\377\377\377\275\377\21\376J\375\246\374\202\372"
.ascii "\240\371`\371\300\361\201\371\"\372\207\374i\375I\375I\375"
.ascii "\252\375(\375\242\372\300\371&\332w\223\36t?l\377\214\377\204"
.ascii "\232\234\13\343e\372D\372D\372$\372\204\372&\374\247\374\207\374"
.ascii "\247\374\350\374f\374!\362\200\371\300\371#\372\302\371"
.ascii "\210\372\332\376\377\377\377\377\335\377\336\377z\377\360\375"
.ascii "\212\375\307\374\3\373B\372\341\371\300\371`\361\300\371\5\374"
.ascii "\247\374\247\374\247\374\350\374\207\374a\372\240\371&\332"
.ascii "w\223\36t_l\277\367\277\367}\367\332\376\231\376\230\376\230\376"
.ascii "\332\376\26\376F\373a\372A\372a\372b\372a\372\300\361"
.ascii "\200\361c\372\317\374\366\375\331\376\276\377\377\377\335\377"
.ascii "R\376\316\375\214\375*\375)\375\10\375\207\374g\374&\374\302\372"
.ascii "\340\371\240\371A\372b\372b\372b\372b\372b\372\340\371\300\361"
.ascii "&\332w\223\36t?l\377\377\377\377\377\377\377\377\377\377"
.ascii "\377\377\377\377\377\377}\377\305\372@\361@\361\240\371\300\371"
.ascii "\300\371\300\361\240\371\204\372\264\375}\377\377\377\377\377"
.ascii "\377\377\335\377\20\376I\375\10\375\350\374\10\375\10\375"
.ascii "\10\375(\375\307\374\3\373\1\372\200\361\300\361\300\361"
.ascii "\300\361\300\361\300\371\300\371\300\371\300\361G\332\271\213"
.ascii "?l_d\37\337\37\337\377\336\333\366\231\376\230\376\230\376\332\376"
.ascii "7\376\313\373\7\373\306\372\"\372\300\361\240\371\300\371"
.ascii "\240\371c\372Q\375\330\376{\377Z\377Z\377\27\377\255\375"
.ascii "\11\375\347\374\350\374\10\375\10\375\10\375)\375\310\374#\373"
.ascii "\1\372\200\361\240\371\240\361\240\361\240\361\240\371\240\371"
.ascii "\300\371\300\361%\3423\243\230\213\231\213\337\214\337\204"
.ascii "}\214N\323\307\362\204\372\244\372c\372\7\373\365\375\33\377"
.ascii "x\376h\373\1\372\200\361\300\371\300\371!\372\7\374*\375\214\375"
.ascii "l\375l\375k\375\11\375\10\375\10\375\10\375\10\375\10\375"
.ascii "\10\375\10\375\307\374#\373!\372\240\371\300\371\300\361\240\361"
.ascii "\300\361\300\371\300\371\300\361\300\361\301\361\3\342"
.ascii "%\342\5\342_l\177d\36tk\302\241\351\200\371\300\361`\371d\372"
.ascii "\331\376\377\377\134\377\211\373\300\371@\371\240\371\300\371"
.ascii "!\372\346\373\310\374I\375\10\375\10\375\10\375\350\374\10\375"
.ascii "\10\375\350\374\350\374\10\375\10\375I\375\350\374#\373"
.ascii "!\372\240\371\240\361\300\361\240\361\200\361\200\361`\361\200\361"
.ascii "\200\371`\361\200\361\200\361`\361\271\213\272\203\267\233"
.ascii "M\323I\363\6\373\1\372`\361\"\362s\375\270\3766\376-\374"
.ascii "\211\373\7\373\1\372\240\371\1\372D\373\345\373F\374\307\374"
.ascii "\10\375\7\375\350\374\10\375\350\374\350\374\10\375\350\374g\374"
.ascii "f\374\5\374\302\372\0\372\240\361\300\371\240\371\341\371"
.ascii "\244\372\7\373G\373G\373'\373'\373'\373'\373'\373\356\302\254\312"
.ascii "+\323\23\355W\376\324\375\305\372\240\371\340\361'\373"
.ascii "\211\373\353\373R\375W\376\324\375\203\372\200\361\300\371a\372"
.ascii "b\372\343\372\207\374(\375\10\375\10\375\10\375\10\375\350\374"
.ascii "(\375\350\374d\373\302\372\202\372!\372\300\371\240\371"
.ascii "\240\371\200\371\"\372,\374\224\375W\3766\376\26\376\26\376\26\376"
.ascii "\26\376\26\376%\332\303\351\246\362x\376\377\377\235\377"
.ascii "H\373\300\371\200\361\301\371\200\371\204\372\26\376\377\377"
.ascii "<\377c\372\0\361@\361\200\361`\361\341\371\207\374i\375I\375"
.ascii "I\375I\375I\375I\375\212\375\10\375\343\372\0\372\240\371`\371"
.ascii "@\371 \371 \361\0\361\341\361\20\375\372\376\337\377\376\377"
.ascii "\376\377\376\377\376\377\376\377\376\377\4\342\241\361!\372"
.ascii "M\374R\375\360\374\204\372\240\371\200\371\200\371@\371\1\372"
.ascii ".\375\224\376\224\376\357\374n\374\14\374\245\372\241\361"
.ascii "\240\371#\373\204\373\205\373\204\373\204\373\204\373d\373\244\373"
.ascii "d\373A\372\200\361\300\371H\373,\374\217\374n\374n\374"
.ascii "\357\374\271\376\336\377\377\367\377\326\177\276_\276_\276_\276"
.ascii "_\276%\342\2\352\300\371\300\361\300\361\300\371\300\371"
.ascii "\300\371\300\371\300\371\240\371!\372\345\373\206\374J\375{\377"
.ascii "\377\377\33\377\14\374C\372\200\371\240\361\300\371\240\371"
.ascii "\300\371\240\371\240\371\300\371\300\371\300\371\300\361\200\361"
.ascii "B\372R\375\134\377\377\377\377\377\377\377\377\377\377\377"
.ascii "\377\377\237\367?\225?t\37l?t?l?lF\332\3\352\300\361\341\361"
.ascii "\301\361\341\361\341\361\341\361\341\361\300\361\240\371"
.ascii "\1\372\346\373\206\374I\375{\377\377\377\33\377\14\374C\372\240\371"
.ascii "\300\371\300\371\340\371\340\371\300\371\340\371\300\371"
.ascii "\340\371\340\371\340\371\200\371C\372R\375<\377\377\377\377\377"
.ascii "\377\377\377\377\377\377\377\377\237\357\277\204\377k_t"
.ascii "?t?l?lS\2432\253\21\253\21\253\21\253\21\253\21\253\22\2531\263"
.ascii "\11\333\5\363d\373g\374\307\374)\375s\376\326\376T\3760\375"
.ascii "\257\374n\374n\374n\374n\374n\374n\374n\374\216\374\216\374"
.ascii "n\374\216\374M\374\260\374\230\376\276\377\377\377\370\376"
.ascii "\265\376\265\376\265\376\325\376u\366\325\264u\254\227\244\134\204"
.ascii "?t\37l\36t\36t\36t\36t\36t\36t\36t\37l\35|Q\304j\354\207\374"
.ascii "\310\374\350\374\10\375k\375k\375\255\375\225\376\371\376"
.ascii ";\377\33\377\33\377\33\377\33\377\33\377\33\377\32\377\32\377"
.ascii "\33\377\33\377\32\377;\377\275\377\377\377\335\377\20\376"
.ascii "k\375k\375k\375\213\375l\375\14\355\354\344\317\324y\224_t?l"
.ascii "?l?l?t?l?l?l?l\37d>|\261\304\352\364\10\375\10\375\10\375\350\374"
.ascii "\350\374\347\374K\375\366\376\275\377\377\377\377\377\377\377"
.ascii "\377\377\377\377\377\377\377\377\377\377\377\377\377\377"
.ascii "\377\377\377\377\377\377\377\377\377\377\275\377\215\375\350\374"
.ascii "\347\374\350\374\350\374\350\374\10\375\10\375\313\344"
.ascii "x\234>t?l?l?l?l?l?l?ty\224w\234\264\264\354\344\11\375\10\375"
.ascii "\10\375\10\375\10\375\350\374\350\374\14\3558\265^\235_\235"
.ascii "_\235_\235_\235\177\235_\235_\235_\235_\235_\235_\235_\235_\235"
.ascii "_\235_\225=\245\15\355\350\374\347\374\350\374\350\374\350\374"
.ascii "\10\375\10\375\352\364\261\304\225\264\226\254?l?l?l?l"
.ascii "?l>|\224\274\317\324\354\354\350\374\10\375\10\375\10\375\10\375"
.ascii "\10\375\10\375\10\375\314\3448\224\376k\337c\377c\377c\377c"
.ascii "\377c\377c\337c\337c\377c\377c\377c\377c\377c\377c\337[\35t"
.ascii "\315\334\10\375\10\375\10\375\10\375\10\375\10\375\350\374"
.ascii "\351\374\353\354\354\344\355\344?l?l?l?l?l>|\261\314\352\364"
.ascii "\7\375\10\375\10\375\10\375\10\375\10\375\10\375\10\375\350\374"
.ascii "\354\344x\234>|?l?t?t?t?l?l?l?l?t?l?l?l?l?t\37d]|\315\344"
.ascii "\350\374\350\374\10\375\10\375\10\375\10\375\10\375\10\375\10\375"
.ascii "\10\375\350\374?l?l?l?l?l>|\261\314\352\364\350\374\10\375"
.ascii "\350\374\10\375\10\375\10\375\10\375\10\375\10\375\354\344"
.ascii "x\234>|?l?l?t?t?l?l?l?t?l?l?l?l?l?l\37d=|\315\344\10\375\10\375"
.ascii "\10\375\10\375\10\375\10\375\10\375\10\375\10\375\10\375"
.ascii "\10\375?l?l?l?l?l=|\261\304\352\364\10\375\10\375\10\375\10\375"
.ascii "\10\375\10\375\10\375\10\375\10\375\314\354x\234>t?l?l?l?t"
.ascii "?l?l?l?t?t?l?l?l?l?l?d=|\315\344\10\375\10\375\10\375\10\375"
.ascii "\10\375\10\375\10\375\10\375\10\375\10\375\350\374?l?l?l?l\37l"
.ascii "=|\261\304\352\364\7\375\10\375\10\375\10\375\10\375\10\375"
.ascii "\10\375\10\375\10\375\314\354x\234>t?l\37l?l?l?l?l?l?t?t?l"
.ascii "?t?t?l?l\37d]|\314\344\7\375\10\375\10\375\10\375\10\375\10\375"
.ascii "\10\375\10\375\10\375\350\374\350\374"

goomba:
.ascii "?t?l?l?l?l?l?l?l?l?l?l?l?l?l\37l?l_l\34t\10\233\303\242\304\242"
.ascii "\304\242\304\242\344\242\344\242\304\242\344\242\344\242\302\242"
.ascii "\7\233\373s_l?l?l?l?t?t?l?l?l?l?l?l?t?t?l?l?t?l?l?l?t?t"
.ascii "?t?l?l?l?l?l?l?l?t?l_l\177d\36l\7\233\240\252\302\242\302\252"
.ascii "\301\242\302\242\302\242\302\242\302\242\301\242\240\252\345\232"
.ascii "\35t_d_l?l?l?l?l?l?l?l?l?l?l?t?t?t?l?l?l?l?l?t?t?t?l?l?t"
.ascii "?l?l?l?l?l?t\33t\34t\327{\344\242\200\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\242\200\252\302\242"
.ascii "\267{\34t\33t>l?t?l?l?l?l?t?t?t?l?t?l?l?l?l?l?l?l?l?l?l?l?l"
.ascii "?l?t?l?l?l_l\34t\11\233\303\242\303\242\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\303\242\302\242\7\233\373s_l?l?l?t?l?l?t?t?l"
.ascii "?l?l?l?l?l?l?l?l?l?l?l?l?l?t?l?l?l_l\237d=t\345\242\200\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\242\240\252\240\252\240\252\240\252\200\262"
.ascii "\302\242\34t_l_l?l?t?t?l?l?t?l?l?l?t?t?t?l?l?l?l?l?l?l?l?t?l"
.ascii "?l?t\371{\371{\324\203\344\242\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\242\240\252\302\242\265\203\330{\370{"
.ascii "\36t?l?l?l?l?l?l?l?l?t?t?t?l?l?l?l?l?l?l?l?l?l_l=t\350\232"
.ascii "\242\252\302\242\240\242\240\242\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\242\242\241\252\346\232"
.ascii "\374{?l_l?t?l?l?l?l?l?l?l?l?l?l?t?l?l?l?l?l?l_l\177d=l"
.ascii "\345\232\200\262\200\252\240\252\240\242\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\240\252\200\262"
.ascii "\303\242\34t_l_l?l?t?l?l?l?t?l?l?l?l?l?l?l?l?l?l?l\36l\266{"
.ascii "\265{\222\203\303\242\200\252\240\252\240\252\240\252\240\242"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\302\242\222\203\265{\265{\36t?l?l?t?l?l"
.ascii "?l?l?l?l?l?l?l?t?l?l_d=l\7\243\301\262\341\252\300\262\300\262"
.ascii "\300\262\240\252\240\242\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\300\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\300\262\300\262\300\252\341\252"
.ascii "\241\262\345\242\374s_l?l?t?t?t?l?l?t?l?l?l?l?l?t?l\177d"
.ascii "=t\5\243\240\262\300\262\300\262\300\262\300\262\240\252\240\252"
.ascii "\240\252\240\252\240\242\240\252\240\242\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252\300\262\300\262\300\262\300\272\240\272\343\252"
.ascii "\34t_d_l?l?t?t?l?l?l?l?l?l?t?l>t\223\203\222\213o\203\343a"
.ascii "`Y\200a\200Y`Q\200a\200\232\300\252\240\252\240\252\240\252\240\252"
.ascii "\240\242\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\300\252\200\242\240i`Y`Y\200Y@Y\242a"
.ascii ".\203\221\213\222\203\35t?l?l?t?l?t?l?l?l?l\177l=l\307\232"
.ascii "\301\272a\232`\30\0\0\0\0\0\0\0\0 \10@\222\340\272\300\262"
.ascii "\240\252\300\252\300\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\300\262\0\273\200\232 \20"
.ascii "\0\0\0\0\0\0\0\0@\20A\222\300\262\304\242\34t_l?l?l?l?t?l?l"
.ascii "?l?l\177d\34l\345\232\300\272`\232@\20\0\0\0\0 \0\0\0@\10 \222"
.ascii "\340\272\240\262\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\242\240\252\240\252\300\262"
.ascii "\340\272`\232@\20\0\0 \0\0\0\0\0@\10@\222\240\272\303\242"
.ascii "\374s_l?l?l?t?l?l?l\35tq\213N\213K\223\302\242\300\262\200\242"
.ascii "\240i@Y\301a\357\213\24\235Q\214\303Y\3008@Q`\222\300\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\240\242"
.ascii "\300\252\200\232`Y\340@\201Q\17\204\364\2240\214\342i@Y\240i"
.ascii "\200\232\240\252\241\242,\223M\223o\213\35t?l?t?l_l<t\346\232"
.ascii "\200\252\240\252\240\252\240\252\240\252\240\252@\242\3\263"
.ascii "\32\367\377\377]\347e)\0\0 \20@\222\340\272\300\262\340\262"
.ascii "\340\262\340\262\340\262\340\262\340\262\300\262\0\303\200\242"
.ascii "`\30\0\0\343\30\332\336\377\377\134\367e\273@\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\200\252\304\242\373{?l?t?l"
.ascii "_l\34t\5\233\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "@\242#\263:\367\377\377<\347e)\0\0@\10 \212\300\262\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\340\262"
.ascii "`\232`\30\0\0\343\30\373\336\377\377|\377\205\273\200\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\200\252\303\242\373{"
.ascii "?l?t?l_l\34t\346\232\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252@\242\3\263\32\367\377\377\34\347e)\0\0\0\0\240(\3408"
.ascii "\3400\3008\3408\3008\3400\3400\3400\3008\3408\3000 \0\0\0\343\30"
.ascii "\332\326\377\377\134\367\205\263`\242\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\304\242\373{?l?t_l\177d>l\346\232"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252@\242\3\263"
.ascii "\32\357\377\377\34\347e)\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
.ascii "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\343\30\272\326\377\377\134\367"
.ascii "d\263`\242\240\252\240\252\240\252\240\252\240\252\200\252"
.ascii "\304\242\35t_d_l>t_l\32t\345\242\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252@\242\3\263\32\357\377\377\34\347e)\0\0"
.ascii "\0\0a\10\202\10a\10 \10 \10 \10 \10 \10 \10a\10\202\10a\10 \0"
.ascii "\0\0\343\30\272\326\377\377\134\367e\263`\242\240\252\240\252"
.ascii "\240\252\240\252\240\252\200\252\304\242\372{?l=t*\223\11\223"
.ascii "\346\232\241\242\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "@\242\3\263\32\367\377\377\34\347e)\0\0\242\20""4\245"
.ascii "\273\326\366\305\304\212\340\201\0\202\0\202\300\201\202\212"
.ascii "\224\275\333\336\226\265\4!\0\0\343\30\273\326\377\377|\367e\263"
.ascii "`\242\240\252\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\346\232\7\233\347\232\303\242\241\252\200\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252 \242\3\263\32\357"
.ascii "\377\377\34\347\343\30\0\0a\10\272\326\377\377\275\377\245\273"
.ascii "\200\262\300\262\300\262`\252C\273[\377\377\377]\357\303\30"
.ascii "\0\0a\10\272\326\377\377\134\367\205\263`\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\200\252\240\252"
.ascii "\240\252\344\242\302\242\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252@\242\3\263\32\357\377\377<\347"
.ascii "\3479 \0\2461\333\336\377\377|\367\205\273\200\242\240\252"
.ascii "\240\252@\242#\263\33\367\377\377<\347\3079\0\0\2461\373\336"
.ascii "\377\377\134\367\205\263`\242\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\344\242\302\242"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252@\242\3\263\32\357\377\377\377\377\333\336\232\326\373\336"
.ascii "\336\377\377\377|\367\205\263\200\242\240\252\240\252"
.ascii "@\242#\263\32\367\377\377\377\377\373\336\272\326\373\336\337\377"
.ascii "\377\377\134\367e\263`\242\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\344\242\302\242"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\300\252 \242$\253\134\367\377\377\377\377\377\377\377\377"
.ascii "\377\377\377\377\377\377\276\377\205\273`\242\240\242\240\252"
.ascii " \242#\263|\367\377\377\377\377\377\377\377\377\377\377\377\377"
.ascii "\377\377\275\367d\263`\242\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\242\240\252\240\252\344\242\301\242"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252@\242\2\253V\346[\367\32\367\32\367:\367\32\367:\367"
.ascii "\134\367\227\356d\263\200\252\240\252\240\252@\242\3\253v\346"
.ascii "\134\367\32\367:\367\32\367:\367\32\367\134\367w\356d\263"
.ascii "\200\242\240\252\240\252\240\252\240\242\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\344\242\302\242\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\3\263#\263#\263#\263#\263#\263#\263#\263\2\263\300\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\2\263#\263#\263#\263"
.ascii "\3\263\3\263#\263#\263\2\263\300\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\242\240\252\240\252\240\252\240\252\240\252"
.ascii "\302\242\240\252\200\252\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252`\242\200\252`\242@\242"
.ascii " \242 \242@\242 \242@\242\200\242\200\242\200\242\200\242"
.ascii "\200\242\200\242@\242@\242 \242 \242 \242@\242`\242`\242`\242"
.ascii "\240\242\240\252\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252\200\252\240\252\200\252+\223*\223\7\233\301\242"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\240\252\240\252"
.ascii "\240\252\240\252\300\252C\273\204\303d\303d\303\204\303"
.ascii "\204\303\204\273d\303d\303d\303d\303d\303\204\303\204\303\204\303"
.ascii "\204\303\204\303c\273\300\252\240\252\240\252\240\252\240\242"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\252\301\242"
.ascii "\347\232\10\233\10\233=l?l\374s\345\232\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\240\242@\242\341\252"
.ascii ",\355\320\375\257\375\257\375\257\365\257\375\257\375"
.ascii "\257\375\257\375\257\375\257\375\257\375\257\375\257\375\257\375"
.ascii "\257\375\320\375m\365\2\263`\242\240\252\240\252\240\252"
.ascii "\240\252\240\252\240\252\240\252\240\252\200\252\303\242\371{"
.ascii ">t\35t_l_d\35t\345\242\200\252\200\252\240\252\200\252\200\252"
.ascii "\200\252\240\252\240\252\200\252 \232\301\252m\3651\376\20\376"
.ascii "\360\375\360\375\360\375\20\376\360\375\360\375\361\375"
.ascii "\360\375\360\375\360\375\20\376\20\376\20\3762\376\257\375\2\263"
.ascii "`\242\200\252\240\252\200\252\200\252\200\252\200\252\240\252"
.ascii "\200\252\200\262\302\242\34t_l?l?l_l\35to\213*\223+\223"
.ascii "+\223+\223+\223+\223,\213K\233\247\303\245\303\347\313n\365\360\375"
.ascii "\357\375\360\375\320\375\317\375\317\375\320\375\320\375"
.ascii "\317\375\320\375\320\375\317\375\320\375\320\375\317\375\360\375"
.ascii "\257\375\7\324\305\313\306\303J\233,\223+\223+\223+\223"
.ascii "+\223+\223J\223N\223\34t?l?t?t?l?l>t>l>l>t^t^t^t\37l~|\222\345"
.ascii "\317\375\317\375\320\375\360\375\360\375\320\375\320\375"
.ascii "\320\375\320\375\320\375\320\375\320\375\320\375\360\375\320\375"
.ascii "\320\375\320\375\320\375\320\375\317\375\257\375\356\375"
.ascii "\221\365\235\214?l>t^t^t>t>l>t>t\37l?l?t?l?l?l?l?l?l_l\177l_l"
.ascii "\177l_d\177|\263\345\20\376\360\375\320\375\357\375\317\375"
.ascii "\320\375\320\375\320\375\317\375\360\375\320\375\357\375\320\375"
.ascii "\320\375\360\375\360\375\320\375\317\375\317\375\360\375"
.ascii "\360\375\17\376\322\355\237\204_l_t_t_l_t?l?l?l?l?l?t?l?t?l?t"
.ascii "_t\36l\223B0:0:0:\360)pJ/\335\360\375\317\375\317\375\317\375"
.ascii "\317\375\320\375\317\375\317\375\317\375\320\375\320\375\357\375"
.ascii "\320\375\320\375\360\375\360\375\357\375\317\375\317\375"
.ascii "\360\375\317\375\17\376p\345\260Z\36010:1:\17""2rB\375k_t?t"
.ascii "?t?l\37l?l?t?l_t\277\204\35l\306\20 \0 \0!\0\0\0\241\30\15\325"
.ascii "Q\376\20\376\20\3760\376\20\376\360\375\317\375\320\375\320\375"
.ascii "\360\375\360\375\320\375\320\375\360\375\357\375\320\375"
.ascii "\360\375\20\376\20\376\20\376\20\376q\376n\355\342(\0\0!\0"
.ascii "\1\0\0\0\244\20\334c\237|_t?t?l?t?l?t?l?l\237|\374k\245\20\0\0"
.ascii "\0\0\0\0\0\0\200\30\315\314\20\376\320\375\360\375\360\375"
.ascii "\320\375\320\375\320\375\320\375\320\375\320\375\357\375\320\375"
.ascii "\320\375\317\375\320\375\317\375\317\375\360\375\360\375"
.ascii "\320\375\320\375Q\376.\335\301 \0\0\0\0\0\0\0\0c\10\273c\177t"
.ascii "?t?t?l?t?l\177t\35l02\255)\213)B\10\0\0\0\0\0\0\0\0@\10\345Q"
.ascii "fjFbfb\5Z\247r.\345\360\375\320\375\320\375\320\375\360\375"
.ascii "\360\375\357\375\317\375\317\375\360\375n\355\347z&ZFbFbgj\5Z"
.ascii "a\20\0\0\0\0\0\0\0\0!\0k!\254)\17:\335c_t?l?l\237|\334k\305\20"
.ascii "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\0\0\201\20"
.ascii ".\335q\3760\376\360\375\360\375\360\375\360\375\317\375\360\375"
.ascii "\20\376\262\376\217\355\342 \0\0\0\0\0\0\0\0\0\0\0\0\0\0"
.ascii "\0\0\0\0\0\0\0\0\0\0\0\0\203\10\233c\177t?l?l\177|\334c\305\20"
.ascii "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\201\20"
.ascii "\315\314\360\365\257\365\320\375\360\375\357\375\320\375\320\375"
.ascii "\317\375\257\365\20\376\15\335\342 \0\0\0\0\0\0\0\0\0\0"
.ascii "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\204\10\233c_t?l?t\237|\334c"
.ascii "\306\30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0 \10"
.ascii "c9c9\5Z-\335\20\376\360\375\320\3750\376n\355fj\244I\204A"
.ascii "@\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\204\20"
.ascii "\233c\177t?t?l\177|\334c\204\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
.ascii "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0a\20\354\334/\376\357\375"
.ascii "\357\375p\376m\355\301 \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
.ascii "\0\0\0\0\0\0\0\0\0\0\0\0\0\0B\10\233c\177t?t?t\177|\374k\7\31"
.ascii "B\10B\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
.ascii "\0\0\242\30\316\314\361\375\261\365\261\365\22\376/\335\342 "
.ascii "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0B\10"
.ascii "!\0\306\20\273c_t?l\37l?t\36l\232[\233[\27S\244\20\0\0\0\0"
.ascii "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\203\20\330s\276\224"
.ascii "\235\214\235\214\336\224\31|\244\20\0\0\0\0\0\0\0\0\0\0"
.ascii "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\203\10\365J\232[z[\37l?l?l?l"
.ascii "?l?l_t\277|\36l\306\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
.ascii "\0\0\0\0\0\0c\10{[?l\37d?l\177l\275[\245\20\0\0\0\0\0\0\0\0"
.ascii "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\204\20\334c\237|_t?l?l"
.ascii "?t?l?t?t?t\237|\374k\306\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
.ascii "\0\0\0\0\0\0\0\0\0\0c\10zc_t?l?t\177t\334c\245\20\0\0\0\0\0\0"
.ascii "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\204\20\233[_t\37l?l"
.ascii "?l?l"
